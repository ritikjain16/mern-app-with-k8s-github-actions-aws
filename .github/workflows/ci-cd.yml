# name: CI/CD to Kind on EC2

# on:
#   push:
#     branches:
#       - master # change if needed

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       # 1. Checkout repo
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       # 2. Login to DockerHub
#       - name: Login to DockerHub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       # 3. Build & Push Docker Image
#       - name: Build and Push Image
#         run: |
#           IMAGE=${{ secrets.DOCKER_USERNAME }}/mern-backend:${{ github.sha }}
#           echo "IMAGE=$IMAGE" >> $GITHUB_ENV   # make IMAGE available globally
#           docker build -t $IMAGE .
#           docker push $IMAGE

#       # 4. SSH into EC2 & Deploy to Kind
#       - name: Deploy on EC2 Kind Cluster
#         uses: appleboy/ssh-action@v0.1.10
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_KEY }}
#           script: |
#             set -e
#             echo ">>> Pulling latest code"
#             cd /home/ubuntu/mern-app/mern-app-with-k8s-github-actions-aws
#             git pull origin master

#             kubectl apply -f k8s/deployment.yml

#             echo ">>> Using IMAGE=${{ secrets.DOCKER_USERNAME }}/mern-backend:${{ github.sha }}"   # ðŸ‘ˆ print the IMAGE value

#             echo ">>> Updating Deployment"
#             kubectl set image deployment/mern-backend-deployment \
#               mern-backend=${{ secrets.DOCKER_USERNAME }}/mern-backend:${{ github.sha }} \
#               -n mern-app

#             echo ">>> Rolling out deployment"
#             kubectl rollout status deployment/mern-backend-deployment -n mern-app

#             echo ">>> Applying service (in case updated)"
#             kubectl apply -f k8s/service.yml

name: CI-CD to EKS

on:
  push:
    branches:
      - master # change if you use another branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # -------------------------
      # Checkout latest code
      # -------------------------
      - name: Checkout code
        uses: actions/checkout@v4

      # -------------------------
      # Configure AWS credentials
      # -------------------------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1 # change region

      # -------------------------
      # Install dependencies
      # -------------------------
      # - name: Set up kubectl
      #   uses: azure/setup-kubectl@v3
      #   with:
      #     version: "v1.30.0"
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Set up eksctl
        run: |
          curl --silent --location "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.16.2

      # -------------------------
      # Authenticate with EKS
      # -------------------------
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-west-2 --name rj-cluster

      # -------------------------
      # Build and Push Docker image
      # -------------------------
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/mern-backend
          IMAGE_TAG=${{ github.sha }}
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # -------------------------
      # Deploy to EKS
      # -------------------------
      - name: Deploy to EKS
        run: |
          kubectl set image deployment/mern-backend-deployment mern-backend=${IMAGE_NAME}:${IMAGE_TAG} -n mern-app
          kubectl rollout status deployment/mern-backend-deployment -n mern-app
